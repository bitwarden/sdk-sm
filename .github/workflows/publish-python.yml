name: Publish Python SDK
run-name: Publish Python SDK ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run
      version:
        description: "Release Version"
        required: false
        default: "latest"

defaults:
  run:
    shell: bash

env:
  _TARGET_DIR: target/wheels/dist

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      version: ${{ steps.version-output.outputs.version }}
      tag_name: ${{ steps.version-output.outputs.tag_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Branch check
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Version output
        id: version-output
        run: |
          if [[ "${{ inputs.version }}" == "latest" || "${{ inputs.version }}" == "" ]]; then
            TAG_NAME=$(curl  "https://api.github.com/repos/bitwarden/sdk-sm/releases" | jq -c '.[] | select(.tag_name | contains("python")) | .tag_name' | head -1)
            VERSION=$(echo $TAG_NAME | grep -ohE '20[0-9]{2}\.([1-9]|1[0-2])\.[0-9]+')
            echo "Latest Released Version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT

            echo "Latest Released Tag name: $TAG_NAME"
            echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            echo "Release Version: ${{ inputs.version }}"
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          fi

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs: setup
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Get release assets
        working-directory: ${{ env._TARGET_DIR }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ needs.setup.outputs.tag_name }}
        run: |
          gh release download $TAG_NAME --repo bitwarden/sdk-sm --pattern "bitwarden_sdk-*.whl"

      - name: Dry Run - Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        if: ${{ inputs.release_type == 'Dry Run' }}
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: ${{ env._TARGET_DIR }}
          verify-metadata: true # Runs twine check before upload

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        if: ${{ inputs.release_type != 'Dry Run' }}
        with:
          packages-dir: ${{ env._TARGET_DIR }}
          verify-metadata: true # Runs twine check before upload
