name: Publish Java SDK
run-name: Publish Java SDK ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run
      version:
        description: "Release Version"
        required: false
        default: "latest"

defaults:
  run:
    shell: bash
    working-directory: languages/java

env:
  _KEY_VAULT: "bitwarden-ci"

jobs:
  validate:
    name: Setup
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      version: ${{ steps.version-output.outputs.version }}
      tag_name: ${{ steps.version-output.outputs.tag_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Branch check
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Version output
        id: version-output
        run: |
          if [[ "${{ inputs.version }}" == "latest" || "${{ inputs.version }}" == "" ]]; then
            TAG_NAME=$(curl  "https://api.github.com/repos/bitwarden/sdk-sm/releases" | jq -rc '.[] | select(.tag_name | contains("java")) | .tag_name' | head -1)
            VERSION=$(echo $TAG_NAME | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
            echo "Latest Released Version: $VERSION"
            echo "version=$VERSION" >> $GITHUB_OUTPUT

            echo "Latest Released Tag name: $TAG_NAME"
            echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          else
            echo "Release Version: ${{ inputs.version }}"
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          fi

  publish:
    name: Publish
    runs-on: ubuntu-22.04
    needs: validate
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ needs.validate.outputs.tag_name }}

      - name: Log in to Azure
        uses: bitwarden/gh-actions/azure-login@main
        with:
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}

      - name: Retrieve secrets
        id: retrieve-secrets
        uses: bitwarden/gh-actions/get-keyvault-secrets@main
        with:
          keyvault: ${{ env._KEY_VAULT }}
          secrets: "maven-sonartype-ssrh-username,
            maven-sonartype-ossrh-password"

      - name: Log out from Azure
        uses: bitwarden/gh-actions/azure-logout@main

      - name: Setup java
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - name: Download Java SDK Build
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-java.yml
          workflow_conclusion: success
          artifacts: build
          path: languages/java/build

      - name: Download Java Resources
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-java.yml
          workflow_conclusion: success
          artifacts: resources
          path: languages/java/src/main/resources

      - name: Download Java Resources
        uses: bitwarden/gh-actions/download-artifacts@main
        with:
          workflow: build-java.yml
          workflow_conclusion: success
          artifacts: schemas
          path: languages/java/src/main/java/bit/sdk/schema

      - name: Publish package to GitHub Packages
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: ./gradlew publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_USERNAME: ${{ steps.retrieve-secrets.outputs.maven-sonartype-ssrh-username }}
          MAVEN_PASSWORD: ${{ steps.retrieve-secrets.outputs.maven-sonartype-ossrh-password }}
