name: Publish @bitwarden/sdk-wasm
run-name: Publish @bitwarden/sdk-wasm ${{ inputs.release_type }}

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Options"
        required: true
        default: "Release"
        type: choice
        options:
          - Release
          - Dry Run
      version:
        description: "Release Version"
        required: false
        default: "latest"

defaults:
  run:
    working-directory: languages/js/wasm

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      release_version: ${{ steps.version-output.outputs.version }}
      tag_name: ${{ steps.version-output.outputs.tag_name }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Branch check
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: |
          if [[ "$GITHUB_REF" != "refs/heads/main" ]]; then
            echo "==================================="
            echo "[!] Can only release from the 'main' branch"
            echo "==================================="
            exit 1
          fi

      - name: Version output
        id: version-output
        env:
          VERSION: ${{ inputs.version }}
        run: |
          if [[ "${VERSION}" == "latest" || "${VERSION}" == "" ]]; then
            TAG_NAME=$(curl  "https://api.github.com/repos/bitwarden/sdk-sm/releases" | jq -c '.[] | select(.tag_name | contains("napi")) | .tag_name' | head -1)
            VERSION=$(echo "$TAG_NAME" | grep -ohE '20[0-9]{2}\.([1-9]|1[0-2])\.[0-9]+')
            echo "Latest Released Version: $VERSION"
            echo "version=$VERSION" >> "$GITHUB_OUTPUT"

            echo "Latest Released Tag name: $TAG_NAME"
            echo "tag_name=$TAG_NAME" >> "$GITHUB_OUTPUT"
          else
            echo "Release Version: ${VERSION}"
            echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          fi

  npm:
    name: Publish NPM
    environment: "Bitwarden SDK WASM - Production"
    runs-on: ubuntu-22.04
    needs: setup
    permissions:
      contents: read
      id-token: write
      deployments: write
    env:
      _VERSION: ${{ needs.setup.outputs.release_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ needs.setup.outputs.tag_name }}
          persist-credentials: false

      - name: Download artifact
        run: |
          cd "${{ github.workspace }}/languages/js/wasm"
          wget "https://github.com/bitwarden/sdk-sm/releases/download/wasm-v${_VERSION}/sdk-bitwarden-wasm.zip"
          unzip sdk-bitwarden-wasm.zip
          rm sdk-bitwarden-wasm.zip

      - name: Create GitHub deployment
        if: ${{ inputs.release_type != 'Dry Run' }}
        uses: chrnorm/deployment-action@55729fcebec3d284f60f5bcabbd8376437d696b1 # v2.0.7
        id: deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          initial-status: "in_progress"
          environment: "Bitwarden SDK WASM - Production"
          description: "Deployment ${{ env._VERSION }} from branch ${{ github.ref_name }}"
          task: release

      - name: Set up Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: 24
          registry-url: "https://registry.npmjs.org/"
          cache: "npm"

      - name: Publish NPM
        if: ${{ inputs.release_type != 'Dry Run' }}
        run: npm publish --access public

      - name: Update deployment status to Success
        if: ${{ inputs.release_type != 'Dry Run' && success() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status to Failure
        if: ${{ inputs.release_type != 'Dry Run' && failure() }}
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806 # v2.0.3
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
