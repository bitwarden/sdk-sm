name: Build Rust Cross Platform

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main
      - rc
      - hotfix-rc
  pull_request:

permissions:
  contents: read

jobs:
  build_rust:
    name: Build for ${{ matrix.settings.os }} ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-13
            target: aarch64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          - os: windows-2022
            target: x86_64-pc-windows-gnu
          # caution: updating the linux runner OS version for GNU
          #   targets will likely break libbitwarden_c for older OS versions.
          #   prefer using oldest supported runner for for these targets
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-musl

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Install rust
        uses: dtolnay/rust-toolchain@6d653acede28d24f02e3cd41383119e8b1b35921 # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1

      - name: Install Zig
        if: ${{ contains(matrix.settings.target, 'musl') }}
        uses: mlugg/setup-zig@8d6198c65fb0feaa111df26e6b467fea8345e46f # v2.0.5
        with:
          version: 0.15.1

      - name: Install Zigbuild
        if: ${{ contains(matrix.settings.target, 'musl') }}
        run: cargo install cargo-zigbuild --locked --git https://github.com/rust-cross/cargo-zigbuild --rev 6f7e1336c9cd13cf1b3704f93c40fcf84caaed6b # 0.18.4

      - name: Add build architecture
        run: rustup target add ${{ matrix.settings.target }}

      # Build Rust for musl
      - name: Build Rust for - ${{ matrix.settings.target }}
        if: ${{ contains(matrix.settings.target, 'musl') }}
        env:
          RUSTFLAGS: "-D warnings"
        run: cargo zigbuild -p bitwarden-c --target ${{ matrix.settings.target }} --release

      # Build Rust for windows-gnu
      - name: Build Rust for - ${{ matrix.settings.target }}
        if: ${{ matrix.settings.target == 'x86_64-pc-windows-gnu' }}
        env:
          RUSTFLAGS: "-D warnings"
        run: cargo build -p bitwarden-c --target ${{ matrix.settings.target }} --profile=release-windows

      # Build Rust for !musl && !windows-gnu
      - name: Build Rust for - ${{ matrix.settings.target }}
        if: ${{ !contains(matrix.settings.target, 'musl') && matrix.settings.target != 'x86_64-pc-windows-gnu' }}
        env:
          RUSTFLAGS: "-D warnings"
          MACOSX_DEPLOYMENT_TARGET: "10.14" # allows using new macos runner versions while still supporting older systems
        run: cargo build -p bitwarden-c --target ${{ matrix.settings.target }} --release

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: libbitwarden_c_files-${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release/*bitwarden_c*

      - name: Upload Artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: libbitwarden_c_files-${{ matrix.settings.target }}
          path: target/${{ matrix.settings.target }}/release-windows/*bitwarden_c*
